buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    }
}

import groovyx.net.http.HTTPBuilder
import static groovyx.net.http.ContentType.*
import static groovyx.net.http.Method.*

version = "1.0.0"
group = "com.cloudcar.gradle-plugins"

apply plugin: "groovy"
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "net.java.dev.jets3t:synchronize:0.9.0"
    compile "net.java.dev.jets3t:jets3t:0.9.0"
    compile "com.amazonaws:aws-java-sdk:1.8.9.1"
    testCompile "org.spockframework:spock-core:0.6-groovy-1.8"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

groovydoc {
    link("https://jets3t.s3.amazonaws.com/api/", "org.jets3t.")
    link("http://www.gradle.org/docs/current/javadoc/", "org.gradle.")
    link("http://docs.oracle.com/javase/1.7.0/docs/api/", "java.")
    groovyClasspath = configurations.compile
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = "sources"
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from('docs') {
        rename('no-java-source', "README")
    }
}
task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'groovydoc'
    from 'build/docs/groovydoc'
}
jar.dependsOn sourcesJar, javadocJar, groovydocJar

final pomConfig = {
    packaging "jar"
    name "Gradle Amazon S3 Plugin"
    url ""
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact groovydocJar

            pom.withXml {
                final root = asNode()
                root.appendNode('description', 'The gradle task for synchronizing/deleting/purging a local file/directory with a AWS S3 bucket.')
                root.children().last() + pomConfig
            }
        }
    }
}


